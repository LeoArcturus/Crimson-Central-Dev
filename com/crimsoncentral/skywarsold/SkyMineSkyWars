package com.crimsoncentral.skywars;

import java.util.ArrayList;
import java.util.List;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Color;
import org.bukkit.DyeColor;
import org.bukkit.FireworkEffect;
import org.bukkit.GameMode;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.WorldCreator;
import org.bukkit.block.Block;
import org.bukkit.craftbukkit.v1_10_R1.entity.CraftPlayer;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Firework;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.entity.EntityDamageByEntityEvent;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.entity.EntityDamageEvent.DamageCause;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerPickupItemEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.inventory.ItemFlag;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.BannerMeta;
import org.bukkit.inventory.meta.FireworkMeta;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.inventory.meta.SkullMeta;
import org.bukkit.potion.PotionData;
import org.bukkit.potion.PotionType;

import com.crimsoncentral.main.CrimsonCentralMain;
import com.crimsoncentral.main.MainLobby;
import com.crimsoncentral.util.ChestManagerAPI;
import com.crimsoncentral.util.ScoreboardWrapper;

import net.minecraft.server.v1_10_R1.IChatBaseComponent;
import net.minecraft.server.v1_10_R1.IChatBaseComponent.ChatSerializer;
import net.minecraft.server.v1_10_R1.PacketPlayOutTitle;

public class SkyMineSkyWars implements Listener
{
	
	public static List<Player> smDeadPlayers =  new ArrayList<Player>();
	public static List<Player> smPlayers = new ArrayList<Player>();
	public ChestManagerAPI cm = new ChestManagerAPI();
	
	public static int smPlayerCounter = 0;
	public static int smPGVars = 1;
	public static int smGVars = 0;
	public static int smPGTimer = 15;
	public static int smGTimer = 600;
	public static int smGFinal = 10;
	
	public static Player smplayer1 = null;
	public static Player smplayer2 = null;
	public static Player smplayer3 = null;
	public static Player smplayer4 = null;
	public static Player smplayer5 = null;
	public static Player smplayer6 = null;
	public static Player smplayer7 = null;
	public static Player smplayer8 = null;
	public static Player smplayer9 = null;
	public static Player smplayer10 = null;
	public static Player smplayer11 = null;
	public static Player smplayer12 = null;
	public static Player reWinner = null;
	
	public static CrimsonCentralMain plugin;

	public SkyMineSkyWars(CrimsonCentralMain instance) 
	{
		plugin = instance;
	}

	public SkyMineSkyWars() {
	}
	
	@EventHandler
	public void blockChestInterract(PlayerInteractEvent event) {
		Player p = event.getPlayer();
		if(smDeadPlayers.contains(p))
		{
	    	if(event.getAction() == Action.RIGHT_CLICK_BLOCK) {
	    		if(event.getClickedBlock().getType().equals(Material.CHEST))
	    		{
	    			event.setCancelled(true);
	    		}
	    	}
		}
	}

	public void cageDelete()
	{
		World world = Bukkit.getWorld("SkyMine");
		Location loc1 = new Location(world, 25, 143, 50);
		Location loc2 = new Location(world, 0, 143, 60);
		Location loc3 = new Location(world, -27, 143, 51);
		Location loc4 = new Location(world, -51, 143, 26);
		Location loc5 = new Location(world, -60, 143, 0);
		Location loc6 = new Location(world, -51, 143, -26);
		Location loc7 = new Location(world, -26, 143, -51);
		Location loc8 = new Location(world, 0, 143, -60);
		Location loc9 = new Location(world, 26, 143, -51);
		Location loc10 = new Location(world, 51, 143, -26);
		Location loc11 = new Location(world, 60, 143, 0);
		Location loc12 = new Location(world, 50, 143, 26);
		
		Block block1 = Bukkit.getWorld("SkyMine").getBlockAt(loc1);
		block1.setType(Material.AIR);
		Block block2 = Bukkit.getWorld("SkyMine").getBlockAt(loc2);
		block2.setType(Material.AIR);
		Block block3 = Bukkit.getWorld("SkyMine").getBlockAt(loc3);
		block3.setType(Material.AIR);
		Block block4 = Bukkit.getWorld("SkyMine").getBlockAt(loc4);
		block4.setType(Material.AIR);
		Block block5 = Bukkit.getWorld("SkyMine").getBlockAt(loc5);
		block5.setType(Material.AIR);
		Block block6 = Bukkit.getWorld("SkyMine").getBlockAt(loc6);
		block6.setType(Material.AIR);
		Block block7 = Bukkit.getWorld("SkyMine").getBlockAt(loc7);
		block7.setType(Material.AIR);
		Block block8 = Bukkit.getWorld("SkyMine").getBlockAt(loc8);
		block8.setType(Material.AIR);
		Block block9 = Bukkit.getWorld("SkyMine").getBlockAt(loc9);
		block9.setType(Material.AIR);
		Block block10 = Bukkit.getWorld("SkyMine").getBlockAt(loc10);
		block10.setType(Material.AIR);
		Block block11 = Bukkit.getWorld("SkyMine").getBlockAt(loc11);
		block11.setType(Material.AIR);
		Block block12 = Bukkit.getWorld("SkyMine").getBlockAt(loc12);
		block12.setType(Material.AIR);
	}
	
	public void cageRedo()
	{
		World world = Bukkit.getWorld("SkyMine");
		Location loc1 = new Location(world, 25, 143, 50);
		Location loc2 = new Location(world, 0, 143, 60);
		Location loc3 = new Location(world, -27, 143, 51);
		Location loc4 = new Location(world, -51, 143, 26);
		Location loc5 = new Location(world, -60, 143, 0);
		Location loc6 = new Location(world, -51, 143, -26);
		Location loc7 = new Location(world, -26, 143, -51);
		Location loc8 = new Location(world, 0, 143, -60);
		Location loc9 = new Location(world, 26, 143, -51);
		Location loc10 = new Location(world, 51, 143, -26);
		Location loc11 = new Location(world, 60, 143, 0);
		Location loc12 = new Location(world, 50, 143, 26);
		
		Block block1 = Bukkit.getWorld("SkyMine").getBlockAt(loc1);
		block1.setType(Material.GLASS);
		Block block2 = Bukkit.getWorld("SkyMine").getBlockAt(loc2);
		block2.setType(Material.GLASS);
		Block block3 = Bukkit.getWorld("SkyMine").getBlockAt(loc3);
		block3.setType(Material.GLASS);
		Block block4 = Bukkit.getWorld("SkyMine").getBlockAt(loc4);
		block4.setType(Material.GLASS);
		Block block5 = Bukkit.getWorld("SkyMine").getBlockAt(loc5);
		block5.setType(Material.GLASS);
		Block block6 = Bukkit.getWorld("SkyMine").getBlockAt(loc6);
		block6.setType(Material.GLASS);
		Block block7 = Bukkit.getWorld("SkyMine").getBlockAt(loc7);
		block7.setType(Material.GLASS);
		Block block8 = Bukkit.getWorld("SkyMine").getBlockAt(loc8);
		block8.setType(Material.GLASS);
		Block block9 = Bukkit.getWorld("SkyMine").getBlockAt(loc9);
		block9.setType(Material.GLASS);
		Block block10 = Bukkit.getWorld("SkyMine").getBlockAt(loc10);
		block10.setType(Material.GLASS);
		Block block11 = Bukkit.getWorld("SkyMine").getBlockAt(loc11);
		block11.setType(Material.GLASS);
		Block block12 = Bukkit.getWorld("SkyMine").getBlockAt(loc12);
		block12.setType(Material.GLASS);
	}
	
	@SuppressWarnings("unused")
	public void chestRefil()
	{
		World world = Bukkit.getWorld("SkyMine");
		
		//Player Islands
		Location loc = new Location(world, 65, 137, 2);
		Location loc1 = new Location(world, 62, 138, -6);
		Location loc2 = new Location(world, 57, 133, 0);
		Location loc3 = new Location(world, 55, 137, 28);
		Location loc4 = new Location(world, 52, 138, 20);
		Location loc5 = new Location(world, 47, 133, 26);
		Location loc6 = new Location(world, 23, 137, 55);
		Location loc7 = new Location(world, 31, 138, 52);
		Location loc8 = new Location(world, 25, 133, 47);
		Location loc9 = new Location(world, -2, 137, 65);
		Location loc10 = new Location(world, 6, 138, 62);
		Location loc11 = new Location(world, 0, 133, 57);
		Location loc12 = new Location(world, -29, 137, 56);
		Location loc13 = new Location(world, -21, 138, 53);
		Location loc14 = new Location(world, -27, 133, 48);
		Location loc15 = new Location(world, -56, 137, 24);
		Location loc16 = new Location(world, -53, 138, 32);
		Location loc17 = new Location(world, -48, 133, 26);
		Location loc18 = new Location(world, -65, 137, -2);
		Location loc19 = new Location(world, -62, 138, 6);
		Location loc20 = new Location(world, -57, 133, 0);
		Location loc21 = new Location(world, -56, 137, -28);
		Location loc22 = new Location(world, -53, 138, -20);
		Location loc23 = new Location(world, -48, 133, -26);
		Location loc24 = new Location(world, -24, 137, -56);
		Location loc25 = new Location(world, -32, 138, -53);
		Location loc26 = new Location(world, -26, 133, -48);
		Location loc27 = new Location(world, 2, 137, -65);
		Location loc28 = new Location(world, -6, 138, -62);
		Location loc29 = new Location(world, 0, 133, -57);
		Location loc30 = new Location(world, 28, 137, -56);
		Location loc31 = new Location(world, 20, 138, -53);
		Location loc32 = new Location(world, 26, 133, -48);
		Location loc33 = new Location(world, 56, 137, -24);
		Location loc34 = new Location(world, 53, 138, -32);
		Location loc35 = new Location(world, 48, 133, -26);
		
		//Pre-center Islands
		Location loc36 = new Location(world, 31, 137, 0);
		Location loc37 = new Location(world, 20, 138, -28);
		Location loc38 = new Location(world, 1, 137, -32);
		Location loc39 = new Location(world, -25, 138, -19);
		Location loc40 = new Location(world, -30, 137, -1);
		Location loc41 = new Location(world, -19, 138, 27);
		Location loc42 = new Location(world, 0, 137, 31);
		Location loc43 = new Location(world, 27, 138, 20);
		
		//Center Island
		Location loc44 = new Location(world, 0, 121, 1);
		Location loc45 = new Location(world, -10, 128, 2);
		Location loc46 = new Location(world, -9, 126, -4);
		Location loc47 = new Location(world, 10, 129, -3);
		Location loc48 = new Location(world, 8, 128, 5);
		Location loc49 = new Location(world, 0, 144, -2);
		Location loc50 = new Location(world, 0, 144, 2);
		Location loc51 = new Location(world, 0, 163, 0);
		
		//Player Islands
		ItemStack woodenSword = new ItemStack(Material.WOOD_SWORD, 1);
		ItemStack chainHelm = new ItemStack(Material.CHAINMAIL_HELMET, 1);
		ItemStack chainChest = new ItemStack(Material.CHAINMAIL_CHESTPLATE, 1);
		ItemStack apple1 = new ItemStack(Material.APPLE, 2);
		ItemStack stoneSword = new ItemStack(Material.STONE_SWORD, 1);
		ItemStack wood1 = new ItemStack(Material.WOOD, 16);
		ItemStack pork1 = new ItemStack(Material.GRILLED_PORK, 4);
		ItemStack lava = new ItemStack(Material.LAVA_BUCKET, 1);
		ItemStack ironAxe = new ItemStack(Material.STONE_AXE, 1);
		ItemStack sand1 = new ItemStack(Material.SAND, 24);
		ItemStack bread1 = new ItemStack(Material.BREAD, 10);
		ItemStack ironSword = new ItemStack(Material.IRON_SWORD, 1);
		ItemStack bow = new ItemStack(Material.BOW, 1);
		ItemStack arrows1 = new ItemStack(Material.ARROW, 16);
		ItemStack log1 = new ItemStack(Material.LOG, 16);
		ItemStack wood2 = new ItemStack(Material.WOOD, 8);
		ItemStack leatherChest = new ItemStack(Material.LEATHER_CHESTPLATE, 1);
		ItemStack chainBoots = new ItemStack(Material.CHAINMAIL_BOOTS, 1);
		ItemStack leatherLeg = new ItemStack(Material.LEATHER_LEGGINGS, 1);
		ItemStack cobble1 = new ItemStack(Material.COBBLESTONE, 16);
		ItemStack snow1 = new ItemStack(Material.SNOW_BALL, 16);
		ItemStack apple2 = new ItemStack(Material.APPLE, 8);
		ItemStack bread2 = new ItemStack(Material.BREAD, 5);
		ItemStack snow2 = new ItemStack(Material.SNOW_BALL, 8);
		ItemStack pick = new ItemStack(Material.STONE_PICKAXE, 1);
		ItemStack woodAxe = new ItemStack(Material.WOOD_AXE, 1);
		ItemStack leatherBoots = new ItemStack(Material.LEATHER_BOOTS, 1);
		ItemStack arrows2 = new ItemStack(Material.ARROW, 24);
		ItemStack log2 = new ItemStack(Material.LOG, 12);
		ItemStack dirt1 = new ItemStack(Material.DIRT, 16);
		ItemStack dirt2 = new ItemStack(Material.DIRT, 24);
		ItemStack cobble2 = new ItemStack(Material.DIRT, 24);
		ItemStack sand2 = new ItemStack(Material.SAND, 16);
		ItemStack glass1 = new ItemStack(Material.GLASS, 16);
		ItemStack glass2 = new ItemStack(Material.GLASS, 24);
		ItemStack stone1 = new ItemStack(Material.STONE, 16);
		ItemStack stone2 = new ItemStack(Material.STONE, 24);
		ItemStack water = new ItemStack(Material.WATER, 1);
		
		//Pre-center Islands
		ItemStack ironHelm = new ItemStack(Material.IRON_HELMET, 1);
		ItemStack ironChest = new ItemStack(Material.IRON_CHESTPLATE, 1);
		ItemStack ironLeg = new ItemStack(Material.IRON_LEGGINGS, 1);
		ItemStack ironBoots = new ItemStack(Material.IRON_BOOTS, 1);
		ItemStack tnt1 = new ItemStack(Material.TNT, 8);
		ItemStack tnt2 = new ItemStack(Material.TNT, 16);
		ItemStack gapple1 = new ItemStack(Material.GOLDEN_APPLE, 1);
		ItemStack gapple2 = new ItemStack(Material.GOLDEN_APPLE, 2);
		ItemStack diamond1 = new ItemStack(Material.DIAMOND, 4);
		ItemStack diamond2 = new ItemStack(Material.DIAMOND, 8);
		ItemStack fs = new ItemStack(Material.FLINT_AND_STEEL, 1);
		ItemStack diamondSword = new ItemStack(Material.DIAMOND_SWORD, 1);
		ItemStack diamondAxe = new ItemStack(Material.DIAMOND_AXE, 1);
		ItemStack splashhe = new ItemStack(Material.SPLASH_POTION);
		ItemMeta splashhemeta = (PotionMeta) splashhe.getItemMeta();
		((PotionMeta) splashhemeta).setBasePotionData(new PotionData(PotionType.INSTANT_HEAL));
		splashhe.setItemMeta(splashhemeta);
		ItemStack splashha = new ItemStack(Material.SPLASH_POTION);
		ItemMeta splashhameta = (PotionMeta) splashha.getItemMeta();
		((PotionMeta) splashhameta).setBasePotionData(new PotionData(PotionType.INSTANT_DAMAGE));
		splashha.setItemMeta(splashhameta);
		
		//Center Island
		ItemStack diamondHelm = new ItemStack(Material.DIAMOND_HELMET, 1);
		ItemStack diamondChest = new ItemStack(Material.DIAMOND_CHESTPLATE, 1);
		ItemMeta diamondChestMeta = diamondChest.getItemMeta();
		diamondChestMeta.addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 1, true);
		diamondChest.setItemMeta(diamondChestMeta);
		ItemStack diamondLeg = new ItemStack(Material.DIAMOND_LEGGINGS, 1);
		ItemStack diamondBoots = new ItemStack(Material.DIAMOND_BOOTS, 1);
		ItemStack enderPearl1 = new ItemStack(Material.ENDER_PEARL, 4);
		ItemStack enderPearl2 = new ItemStack(Material.ENDER_PEARL, 6);
		ItemStack splashsw = new ItemStack(Material.SPLASH_POTION, 1);
		ItemMeta splashswmeta = (PotionMeta) splashsw.getItemMeta();
		((PotionMeta) splashswmeta).setBasePotionData(new PotionData(PotionType.SPEED));
		splashsw.setItemMeta(splashswmeta);
		ItemStack splashfr = new ItemStack(Material.POTION, 1);
		ItemMeta splashfrmeta = (PotionMeta) splashfr.getItemMeta();
		((PotionMeta) splashfrmeta).setBasePotionData(new PotionData(PotionType.FIRE_RESISTANCE));
		splashfr.setItemMeta(splashfrmeta);
		ItemStack splashst = new ItemStack(Material.POTION, 1);
		ItemMeta splashstmeta = (PotionMeta) splashst.getItemMeta();
		((PotionMeta) splashstmeta).setBasePotionData(new PotionData(PotionType.STRENGTH));
		splashst.setItemMeta(splashstmeta);
		ItemStack deadBush = new ItemStack(Material.DEAD_BUSH, 1);
		ItemMeta deadBushMeta = deadBush.getItemMeta();
		deadBushMeta.addEnchant(Enchantment.KNOCKBACK, 1, true);
		deadBush.setItemMeta(deadBushMeta);
		ItemStack bottleOEnchanting = new ItemStack(Material.EXP_BOTTLE, 16);
		ItemStack enchantedBook1 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook1Meta = enchantedBook1.getItemMeta();
		enchantedBook1Meta.addEnchant(Enchantment.ARROW_KNOCKBACK, 1, true);
		enchantedBook1.setItemMeta(enchantedBook1Meta);
		ItemStack enchantedBook2 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook2Meta = enchantedBook2.getItemMeta();
		enchantedBook2Meta.addEnchant(Enchantment.ARROW_DAMAGE, 1, true);
		enchantedBook2.setItemMeta(enchantedBook2Meta);
		ItemStack enchantedBook3 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook3Meta = enchantedBook3.getItemMeta();
		enchantedBook3Meta.addEnchant(Enchantment.ARROW_FIRE, 1, true);
		enchantedBook3.setItemMeta(enchantedBook3Meta);
		ItemStack enchantedBook4 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook4Meta = enchantedBook4.getItemMeta();
		enchantedBook4Meta.addEnchant(Enchantment.ARROW_INFINITE, 1, true);
		enchantedBook4.setItemMeta(enchantedBook4Meta);
		ItemStack shield = new ItemStack(Material.SHIELD);
		ItemStack bone1 = new ItemStack(Material.BONE, 2);
		ItemStack bone2 = new ItemStack(Material.BONE, 5);
		ItemStack wolf = new ItemStack(Material.MONSTER_EGG, 1, (short) 95);
		
		//Player Islands
		//Player Islands
				cm.createChest(loc);
				cm.clearChest(loc);
				cm.setChestItem(loc, true, woodenSword, 3, chainHelm, 10, chainChest, 17, apple1, 25);
				
				cm.createChest(loc1);
				cm.clearChest(loc1);
				cm.setChestItem(loc1, true, stoneSword, 5, wood1, 18, pork1, 21);

				cm.createChest(loc2);
				cm.clearChest(loc2);
				cm.setChestItem(loc2, true, lava, 6, ironAxe, 14, sand1, 20, bread1, 26);
				
				cm.createChest(loc3);
				cm.clearChest(loc3);
				cm.setChestItem(loc3, true, ironSword, 3, bow, 9, arrows1, 14, sand1, 22);
				
				cm.createChest(loc4);
				cm.clearChest(loc4);
				cm.setChestItem(loc4, true, leatherChest, 6, chainBoots, 15, chainHelm, 21, wood2, 26);
				
				cm.createChest(loc5);
				cm.clearChest(loc5);
				cm.setChestItem(loc5, true, leatherLeg, 4, cobble1, 15, snow1, 23);
				
				cm.createChest(loc6);
				cm.clearChest(loc6);
				cm.setChestItem(loc6, true, water, 3, glass1, 9, ironSword, 20);
				
				cm.createChest(loc7);
				cm.clearChest(loc7);
				cm.setChestItem(loc7, true, apple1, 7, chainChest, 13, chainBoots, 17, sand2, 21);
				
				cm.createChest(loc8);
				cm.clearChest(loc8);
				cm.setChestItem(loc8, true, snow2, 2, pork1, 12, bow, 19);
				
				cm.createChest(loc9);
				cm.clearChest(loc9);
				cm.setChestItem(loc9, true, arrows2, 6, bread2, 13, snow1, 23);
				
				cm.createChest(loc10);
				cm.clearChest(loc10);
				cm.setChestItem(loc10, true, lava, 5, bow, 10, arrows1, 20);
				
				cm.createChest(loc11);
				cm.clearChest(loc11);
				cm.setChestItem(loc11, true, glass1, 4, leatherChest, 10, chainHelm, 23, wood1, 26);

				cm.createChest(loc12);
				cm.clearChest(loc12);
				cm.setChestItem(loc12, true, apple1, 5, wood2, 13, sand2, 21);
				
				cm.createChest(loc13);
				cm.clearChest(loc13);
				cm.setChestItem(loc13, true, chainBoots, 4, leatherLeg, 17, stoneSword, 23);
				
				cm.createChest(loc14);
				cm.clearChest(loc14);
				cm.setChestItem(loc14, true, water, 2, pork1, 14, glass2, 21);
				
				cm.createChest(loc15);
				cm.clearChest(loc15);
				cm.setChestItem(loc15, true, stone1, 3, sand2, 14, ironSword, 22);
				
				cm.createChest(loc16);
				cm.clearChest(loc16);
				cm.setChestItem(loc16, true, lava, 4, snow2, 13, ironAxe, 18);
				
				cm.createChest(loc17);
				cm.clearChest(loc17);
				cm.setChestItem(loc17, true, leatherBoots, 6, leatherLeg, 15, chainHelm, 23);
				
				cm.createChest(loc18);
				cm.clearChest(loc18);
				cm.setChestItem(loc18, true, water, 2, woodenSword, 14, bow, 25);
				
				cm.createChest(loc19);
				cm.clearChest(loc19);
				cm.setChestItem(loc19, true, dirt1, 5, stone1, 11, arrows2, 26);
				
				cm.createChest(loc20);
				cm.clearChest(loc20);
				cm.setChestItem(loc20, true, snow1, 4, pick, 12, chainHelm, 23, chainChest, 26);
				
				cm.createChest(loc21);
				cm.clearChest(loc21);
				cm.setChestItem(loc21, true, bow, 2, arrows2, 15, sand2, 21);
				
				cm.createChest(loc22);
				cm.clearChest(loc22);
				cm.setChestItem(loc22, true, lava, 3, water, 11, chainChest, 15, leatherLeg, 21);
				
				cm.createChest(loc23);
				cm.clearChest(loc23);
				cm.setChestItem(loc23, true, woodAxe, 5, glass2, 14, wood2, 20);
				
				cm.createChest(loc24);
				cm.clearChest(loc24);
				cm.setChestItem(loc24, true, stone1, 6, ironSword, 14, snow2, 21);
				
				cm.createChest(loc25);
				cm.clearChest(loc25);
				cm.setChestItem(loc25, true, apple1, 0, pick, 14, water, 21);
				
				cm.createChest(loc26);
				cm.clearChest(loc26);
				cm.setChestItem(loc26, true, leatherLeg, 2, chainHelm, 13, sand2, 23);
				
				cm.createChest(loc27);
				cm.clearChest(loc27);
				cm.setChestItem(loc27, true, lava, 4, stone2, 12, bow, 21);
				
				cm.createChest(loc28);
				cm.clearChest(loc28);
				cm.setChestItem(loc28, true, cobble2, 5, leatherLeg, 13, chainBoots, 21);
				
				cm.createChest(loc29);
				cm.clearChest(loc29);
				cm.setChestItem(loc29, true, apple2, 3, bow, 14, arrows1, 21);
				
				cm.createChest(loc30);
				cm.clearChest(loc30);
				cm.setChestItem(loc30, true, stoneSword, 6, bread2, 15, snow2, 26);
				
				cm.createChest(loc31);
				cm.clearChest(loc31);
				cm.setChestItem(loc31, true, leatherChest, 4, chainHelm, 14, leatherBoots, 24);
				
				cm.createChest(loc32);
				cm.clearChest(loc32);
				cm.setChestItem(loc32, true, lava, 5, stone2, 15, sand1, 21, pork1, 26);
				
				cm.createChest(loc33);
				cm.clearChest(loc33);
				cm.setChestItem(loc33, true, ironSword, 6, chainChest, 16, bow, 21);
				
				cm.createChest(loc34);
				cm.clearChest(loc34);
				cm.setChestItem(loc34, true, lava, 3, water, 15, woodAxe, 21);
				
				cm.createChest(loc35);
				cm.clearChest(loc35);
				cm.setChestItem(loc35, true, bread1, 4, snow2, 16, cobble2, 23);
				
				//Pre-center Islands
				cm.createChest(loc36);
				cm.clearChest(loc36);
				cm.setChestItem(loc36, true, ironChest, 3, ironBoots, 9, splashha, 15, arrows1, 19, fs, 24);
				
				cm.createChest(loc37);
				cm.clearChest(loc37);
				cm.setChestItem(loc37, true, diamondAxe, 2, tnt1, 7, splashhe, 14, gapple2, 21, pork1, 24);
				
				cm.createChest(loc38);
				cm.clearChest(loc38);
				cm.setChestItem(loc38, true, ironLeg, 5, ironHelm, 12, splashhe, 19, gapple2, 23, apple2, 25);
				
				cm.createChest(loc39);
				cm.clearChest(loc39);
				cm.setChestItem(loc39, true, diamondSword, 4, diamond1, 11, arrows1, 16, fs, 23);
				
				cm.createChest(loc40);
				cm.clearChest(loc40);
				cm.setChestItem(loc40, true, arrows1, 2, diamond2, 7, splashhe, 13, diamondAxe, 19, bread2, 23);
				
				cm.createChest(loc41);
				cm.clearChest(loc41);
				cm.setChestItem(loc41, true, ironHelm, 5, ironBoots, 13, ironLeg, 17, bow, 22);
				
				cm.createChest(loc42);
				cm.clearChest(loc42);
				cm.setChestItem(loc42, true, diamondAxe, 4, diamond2, 11, splashha, 16, arrows1, 23);
				
				cm.createChest(loc43);
				cm.clearChest(loc43);
				cm.setChestItem(loc43, true, ironLeg, 4, ironChest, 11, gapple2, 16, bow, 23, pork1, 19);
				
				//Center Island
				cm.createChest(loc44);
				cm.clearChest(loc44);
				cm.setChestItem(loc44, true, diamondHelm, 3, arrows1, 8, enchantedBook3, 13, enderPearl2, 19, bone2, 24);
				
				cm.createChest(loc45);
				cm.clearChest(loc45);
				cm.setChestItem(loc45, true, diamondChest, 2, splashfr, 8, bottleOEnchanting, 12, deadBush, 17, shield, 23, pork1, 25);
				
				cm.createChest(loc46);
				cm.clearChest(loc46);
				cm.setChestItem(loc46, true, diamondLeg, 4, splashst, 9, arrows1, 13, wolf, 20, bottleOEnchanting, 26, apple2, 16);
				
				cm.createChest(loc47);
				cm.clearChest(loc47);
				cm.setChestItem(loc47, true, diamondBoots, 5, arrows1, 8, enderPearl1, 12, bone1, 16, bow, 21);
				
				cm.createChest(loc48);
				cm.clearChest(loc48);
				cm.setChestItem(loc48, true, diamondHelm, 4, splashsw, 8, bottleOEnchanting, 12, deadBush, 16, shield, 20, pork1, 25);
				
				cm.createChest(loc49);
				cm.clearChest(loc49);
				cm.setChestItem(loc49, true, diamondChest, 3, splashst, 10, bone2, 13, enchantedBook1, 19, enchantedBook4, 25);
				
				cm.createChest(loc50);
				cm.clearChest(loc50);
				cm.setChestItem(loc50, true, diamondLeg, 5, splashsw, 9, bottleOEnchanting, 13, enchantedBook2, 17, wolf, 22, bread2, 25);
				
				cm.createChest(loc51);
				cm.clearChest(loc51);
				cm.setChestItem(loc51, true, diamondBoots, 4, arrows1, 9, enchantedBook3, 13, bone2, 19, bow, 25);
	}
	
	@SuppressWarnings("unused")
	public void chestRefil2()
	{
		World world = Bukkit.getWorld("SkyMine");
		
		//Player Islands
		Location loc = new Location(world, 65, 137, 2);
		Location loc1 = new Location(world, 62, 138, -6);
		Location loc2 = new Location(world, 57, 133, 0);
		Location loc3 = new Location(world, 55, 137, 28);
		Location loc4 = new Location(world, 52, 138, 20);
		Location loc5 = new Location(world, 47, 133, 26);
		Location loc6 = new Location(world, 23, 137, 55);
		Location loc7 = new Location(world, 31, 138, 52);
		Location loc8 = new Location(world, 25, 133, 47);
		Location loc9 = new Location(world, -2, 137, 65);
		Location loc10 = new Location(world, 6, 138, 62);
		Location loc11 = new Location(world, 0, 133, 57);
		Location loc12 = new Location(world, -29, 137, 56);
		Location loc13 = new Location(world, -21, 138, 53);
		Location loc14 = new Location(world, -27, 133, 48);
		Location loc15 = new Location(world, -56, 137, 24);
		Location loc16 = new Location(world, -53, 138, 32);
		Location loc17 = new Location(world, -48, 133, 26);
		Location loc18 = new Location(world, -65, 137, -2);
		Location loc19 = new Location(world, -62, 138, 6);
		Location loc20 = new Location(world, -57, 133, 0);
		Location loc21 = new Location(world, -56, 137, -28);
		Location loc22 = new Location(world, -53, 138, -20);
		Location loc23 = new Location(world, -48, 133, -26);
		Location loc24 = new Location(world, -24, 137, -56);
		Location loc25 = new Location(world, -32, 138, -53);
		Location loc26 = new Location(world, -26, 133, -48);
		Location loc27 = new Location(world, 2, 137, -65);
		Location loc28 = new Location(world, -6, 138, -62);
		Location loc29 = new Location(world, 0, 133, -57);
		Location loc30 = new Location(world, 28, 137, -56);
		Location loc31 = new Location(world, 20, 138, -53);
		Location loc32 = new Location(world, 26, 133, -48);
		Location loc33 = new Location(world, 56, 137, -24);
		Location loc34 = new Location(world, 53, 138, -32);
		Location loc35 = new Location(world, 48, 133, -26);
		
		//Pre-center Islands
		Location loc36 = new Location(world, 31, 137, 0);
		Location loc37 = new Location(world, 20, 138, -28);
		Location loc38 = new Location(world, 1, 137, -32);
		Location loc39 = new Location(world, -25, 138, -19);
		Location loc40 = new Location(world, -30, 137, -1);
		Location loc41 = new Location(world, -19, 138, 27);
		Location loc42 = new Location(world, 0, 137, 31);
		Location loc43 = new Location(world, 27, 138, 20);
		
		//Center Island
		Location loc44 = new Location(world, 0, 121, 1);
		Location loc45 = new Location(world, -10, 128, 2);
		Location loc46 = new Location(world, -9, 126, -4);
		Location loc47 = new Location(world, 10, 129, -3);
		Location loc48 = new Location(world, 8, 128, 5);
		Location loc49 = new Location(world, 0, 144, -2);
		Location loc50 = new Location(world, 0, 144, 2);
		Location loc51 = new Location(world, 0, 163, 0);
		
		//Player Islands
		ItemStack woodenSword = new ItemStack(Material.WOOD_SWORD, 1);
		ItemStack chainHelm = new ItemStack(Material.CHAINMAIL_HELMET, 1);
		ItemStack chainChest = new ItemStack(Material.CHAINMAIL_CHESTPLATE, 1);
		ItemStack apple1 = new ItemStack(Material.APPLE, 2);
		ItemStack stoneSword = new ItemStack(Material.STONE_SWORD, 1);
		ItemStack wood1 = new ItemStack(Material.WOOD, 16);
		ItemStack pork1 = new ItemStack(Material.GRILLED_PORK, 4);
		ItemStack lava = new ItemStack(Material.LAVA_BUCKET, 1);
		ItemStack ironAxe = new ItemStack(Material.STONE_AXE, 1);
		ItemStack sand1 = new ItemStack(Material.SAND, 24);
		ItemStack bread1 = new ItemStack(Material.BREAD, 10);
		ItemStack ironSword = new ItemStack(Material.IRON_SWORD, 1);
		ItemStack bow = new ItemStack(Material.BOW, 1);
		ItemStack arrows1 = new ItemStack(Material.ARROW, 16);
		ItemStack log1 = new ItemStack(Material.LOG, 16);
		ItemStack wood2 = new ItemStack(Material.WOOD, 8);
		ItemStack leatherChest = new ItemStack(Material.LEATHER_CHESTPLATE, 1);
		ItemStack chainBoots = new ItemStack(Material.CHAINMAIL_BOOTS, 1);
		ItemStack leatherLeg = new ItemStack(Material.LEATHER_LEGGINGS, 1);
		ItemStack cobble1 = new ItemStack(Material.COBBLESTONE, 16);
		ItemStack snow1 = new ItemStack(Material.SNOW_BALL, 16);
		ItemStack apple2 = new ItemStack(Material.APPLE, 8);
		ItemStack bread2 = new ItemStack(Material.BREAD, 5);
		ItemStack snow2 = new ItemStack(Material.SNOW_BALL, 8);
		ItemStack pick = new ItemStack(Material.STONE_PICKAXE, 1);
		ItemStack woodAxe = new ItemStack(Material.WOOD_AXE, 1);
		ItemStack leatherBoots = new ItemStack(Material.LEATHER_BOOTS, 1);
		ItemStack arrows2 = new ItemStack(Material.ARROW, 24);
		ItemStack log2 = new ItemStack(Material.LOG, 12);
		ItemStack dirt1 = new ItemStack(Material.DIRT, 16);
		ItemStack dirt2 = new ItemStack(Material.DIRT, 24);
		ItemStack cobble2 = new ItemStack(Material.DIRT, 24);
		ItemStack sand2 = new ItemStack(Material.SAND, 16);
		ItemStack glass1 = new ItemStack(Material.GLASS, 16);
		ItemStack glass2 = new ItemStack(Material.GLASS, 24);
		ItemStack stone1 = new ItemStack(Material.STONE, 16);
		ItemStack stone2 = new ItemStack(Material.STONE, 24);
		ItemStack water = new ItemStack(Material.WATER, 1);
		
		//Pre-center Islands
		ItemStack ironHelm = new ItemStack(Material.IRON_HELMET, 1);
		ItemStack ironChest = new ItemStack(Material.IRON_CHESTPLATE, 1);
		ItemStack ironLeg = new ItemStack(Material.IRON_LEGGINGS, 1);
		ItemStack ironBoots = new ItemStack(Material.IRON_BOOTS, 1);
		ItemStack tnt1 = new ItemStack(Material.TNT, 8);
		ItemStack tnt2 = new ItemStack(Material.TNT, 16);
		ItemStack gapple1 = new ItemStack(Material.GOLDEN_APPLE, 1);
		ItemStack gapple2 = new ItemStack(Material.GOLDEN_APPLE, 2);
		ItemStack diamond1 = new ItemStack(Material.DIAMOND, 4);
		ItemStack diamond2 = new ItemStack(Material.DIAMOND, 8);
		ItemStack fs = new ItemStack(Material.FLINT_AND_STEEL, 1);
		ItemStack diamondSword = new ItemStack(Material.DIAMOND_SWORD, 1);
		ItemStack diamondAxe = new ItemStack(Material.DIAMOND_AXE, 1);
		ItemStack splashhe = new ItemStack(Material.SPLASH_POTION);
		ItemMeta splashhemeta = (PotionMeta) splashhe.getItemMeta();
		((PotionMeta) splashhemeta).setBasePotionData(new PotionData(PotionType.INSTANT_HEAL));
		splashhe.setItemMeta(splashhemeta);
		ItemStack splashha = new ItemStack(Material.SPLASH_POTION);
		ItemMeta splashhameta = (PotionMeta) splashha.getItemMeta();
		((PotionMeta) splashhameta).setBasePotionData(new PotionData(PotionType.INSTANT_DAMAGE));
		splashha.setItemMeta(splashhameta);
		
		//Center Island
		ItemStack diamondHelm = new ItemStack(Material.DIAMOND_HELMET, 1);
		ItemStack diamondChest = new ItemStack(Material.DIAMOND_CHESTPLATE, 1);
		ItemMeta diamondChestMeta = diamondChest.getItemMeta();
		diamondChestMeta.addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 1, true);
		diamondChest.setItemMeta(diamondChestMeta);
		ItemStack diamondLeg = new ItemStack(Material.DIAMOND_LEGGINGS, 1);
		ItemStack diamondBoots = new ItemStack(Material.DIAMOND_BOOTS, 1);
		ItemStack enderPearl1 = new ItemStack(Material.ENDER_PEARL, 4);
		ItemStack enderPearl2 = new ItemStack(Material.ENDER_PEARL, 6);
		ItemStack splashsw = new ItemStack(Material.SPLASH_POTION, 1);
		ItemMeta splashswmeta = (PotionMeta) splashsw.getItemMeta();
		((PotionMeta) splashswmeta).setBasePotionData(new PotionData(PotionType.SPEED));
		splashsw.setItemMeta(splashswmeta);
		ItemStack splashfr = new ItemStack(Material.POTION, 1);
		ItemMeta splashfrmeta = (PotionMeta) splashfr.getItemMeta();
		((PotionMeta) splashfrmeta).setBasePotionData(new PotionData(PotionType.FIRE_RESISTANCE));
		splashfr.setItemMeta(splashfrmeta);
		ItemStack splashst = new ItemStack(Material.POTION, 1);
		ItemMeta splashstmeta = (PotionMeta) splashst.getItemMeta();
		((PotionMeta) splashstmeta).setBasePotionData(new PotionData(PotionType.STRENGTH));
		splashst.setItemMeta(splashstmeta);
		ItemStack deadBush = new ItemStack(Material.DEAD_BUSH, 1);
		ItemMeta deadBushMeta = deadBush.getItemMeta();
		deadBushMeta.addEnchant(Enchantment.KNOCKBACK, 1, true);
		deadBush.setItemMeta(deadBushMeta);
		ItemStack bottleOEnchanting = new ItemStack(Material.EXP_BOTTLE, 16);
		ItemStack enchantedBook1 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook1Meta = enchantedBook1.getItemMeta();
		enchantedBook1Meta.addEnchant(Enchantment.ARROW_KNOCKBACK, 1, true);
		enchantedBook1.setItemMeta(enchantedBook1Meta);
		ItemStack enchantedBook2 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook2Meta = enchantedBook2.getItemMeta();
		enchantedBook2Meta.addEnchant(Enchantment.ARROW_DAMAGE, 1, true);
		enchantedBook2.setItemMeta(enchantedBook2Meta);
		ItemStack enchantedBook3 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook3Meta = enchantedBook3.getItemMeta();
		enchantedBook3Meta.addEnchant(Enchantment.ARROW_FIRE, 1, true);
		enchantedBook3.setItemMeta(enchantedBook3Meta);
		ItemStack enchantedBook4 = new ItemStack(Material.ENCHANTED_BOOK, 1);
		ItemMeta enchantedBook4Meta = enchantedBook4.getItemMeta();
		enchantedBook4Meta.addEnchant(Enchantment.ARROW_INFINITE, 1, true);
		enchantedBook4.setItemMeta(enchantedBook4Meta);
		ItemStack shield = new ItemStack(Material.SHIELD);
		ItemStack bone1 = new ItemStack(Material.BONE, 2);
		ItemStack bone2 = new ItemStack(Material.BONE, 5);
		ItemStack wolf = new ItemStack(Material.MONSTER_EGG, 1, (short) 95);
		
		//Player Islands
		cm.createChest(loc);
		cm.clearChest(loc);
		cm.setChestItem(loc, true, dirt2, 5, chainBoots, 10, chainHelm, 18, apple2, 24);
		
		cm.createChest(loc1);
		cm.clearChest(loc1);
		cm.setChestItem(loc1, true, ironSword, 6, wood2, 16, pork1, 24);

		cm.createChest(loc2);
		cm.clearChest(loc2);
		cm.setChestItem(loc2, true, water, 7, woodAxe, 13, sand2, 21, bread2, 25);
		
		cm.createChest(loc3);
		cm.clearChest(loc3);
		cm.setChestItem(loc3, true, woodenSword, 2, bow, 10, arrows2, 16, sand2, 23);
		
		cm.createChest(loc4);
		cm.clearChest(loc4);
		cm.setChestItem(loc4, true, chainHelm, 6, chainBoots, 15, chainHelm, 21, wood2, 26);
		
		cm.createChest(loc5);
		cm.clearChest(loc5);
		cm.setChestItem(loc5, true, leatherBoots, 4, cobble2, 15, snow2, 21);
		
		cm.createChest(loc6);
		cm.clearChest(loc6);
		cm.setChestItem(loc6, true, lava, 3, glass2, 9, stoneSword, 20);
		
		cm.createChest(loc7);
		cm.clearChest(loc7);
		cm.setChestItem(loc7, true, apple2, 7, chainChest, 12, leatherBoots, 15, sand1, 20);
		
		cm.createChest(loc8);
		cm.clearChest(loc8);
		cm.setChestItem(loc8, true, snow1, 4, pork1, 12, bow, 20);
		
		cm.createChest(loc9);
		cm.clearChest(loc9);
		cm.setChestItem(loc9, true, arrows1, 5, bread1, 18, snow2, 24);
		
		cm.createChest(loc10);
		cm.clearChest(loc10);
		cm.setChestItem(loc10, true, water, 5, bow, 10, arrows2, 20);
		
		cm.createChest(loc11);
		cm.clearChest(loc11);
		cm.setChestItem(loc11, true, glass2, 4, chainChest, 15, chainHelm, 23, wood2, 26);

		cm.createChest(loc12);
		cm.clearChest(loc12);
		cm.setChestItem(loc12, true, apple2, 5, wood1, 13, sand1, 21);
		
		cm.createChest(loc13);
		cm.clearChest(loc13);
		cm.setChestItem(loc13, true, chainChest, 1, leatherLeg, 14, woodenSword, 23);
		
		cm.createChest(loc14);
		cm.clearChest(loc14);
		cm.setChestItem(loc14, true, lava, 2, pork1, 16, glass1, 19);
		
		cm.createChest(loc15);
		cm.clearChest(loc15);
		cm.setChestItem(loc15, true, stone2, 3, sand1, 15, stoneSword, 23);
		
		cm.createChest(loc16);
		cm.clearChest(loc16);
		cm.setChestItem(loc16, true, water, 4, snow1, 14, woodAxe, 19);
		
		cm.createChest(loc17);
		cm.clearChest(loc17);
		cm.setChestItem(loc17, true, chainBoots, 6, leatherLeg, 15, chainHelm, 24);
		
		cm.createChest(loc18);
		cm.setChestItem(loc18, true, lava, 4, ironSword, 13, bow, 24);
		cm.clearChest(loc18);
		
		cm.createChest(loc19);
		cm.clearChest(loc19);
		cm.setChestItem(loc19, true, dirt2, 5, stone2, 11, arrows1, 26);
		
		cm.createChest(loc20);
		cm.clearChest(loc20);
		cm.setChestItem(loc20, true, snow1, 4, pick, 12, leatherLeg, 19, chainChest, 24);
		
		cm.createChest(loc21);
		cm.clearChest(loc21);
		cm.setChestItem(loc21, true, bow, 5, arrows1, 16, sand1, 23);
		
		cm.createChest(loc22);
		cm.clearChest(loc22);
		cm.setChestItem(loc22, true, lava, 11, water, 3, leatherChest, 17, leatherLeg, 23);
		
		cm.createChest(loc23);
		cm.clearChest(loc23);
		cm.setChestItem(loc23, true, ironAxe, 4, glass1, 15, wood2, 23);
		
		cm.createChest(loc24);
		cm.clearChest(loc24);
		cm.setChestItem(loc24, true, stone2, 7, woodenSword, 14, snow1, 22);
		
		cm.createChest(loc25);
		cm.clearChest(loc25);
		cm.setChestItem(loc25, true, apple2, 0, pick, 14, lava, 21);
		
		cm.createChest(loc26);
		cm.clearChest(loc26);
		cm.setChestItem(loc26, true, leatherBoots, 5, chainHelm, 14, sand2, 25);
		
		cm.createChest(loc27);
		cm.clearChest(loc27);
		cm.setChestItem(loc27, true, water, 5, stone1, 13, bow, 21);
		
		cm.createChest(loc28);
		cm.clearChest(loc28);
		cm.setChestItem(loc28, true, cobble1, 5, leatherLeg, 14, chainChest, 22);
		
		cm.createChest(loc29);
		cm.clearChest(loc29);
		cm.setChestItem(loc29, true, apple1, 4, bow, 13, arrows1, 25);
		
		cm.createChest(loc30);
		cm.clearChest(loc30);
		cm.setChestItem(loc30, true, woodenSword, 6, bread1, 16, snow2, 24);
		
		cm.createChest(loc31);
		cm.clearChest(loc31);
		cm.setChestItem(loc31, true, leatherChest, 4, chainHelm, 15, chainBoots, 23);
		
		cm.createChest(loc32);
		cm.clearChest(loc32);
		cm.setChestItem(loc32, true, water, 6, stone1, 15, sand2, 23, apple2, 26);
		
		cm.createChest(loc33);
		cm.clearChest(loc33);
		cm.setChestItem(loc33, true, stoneSword, 6, chainChest, 14, bow, 22);
		
		cm.createChest(loc34);
		cm.clearChest(loc34);
		cm.setChestItem(loc34, true, water, 5, lava, 16, ironAxe, 20);
		
		cm.createChest(loc35);
		cm.clearChest(loc35);
		cm.setChestItem(loc35, true, bread2, 3, snow1, 15, cobble1, 22);
		
		//Pre-center Islands
		cm.createChest(loc36);
		cm.clearChest(loc36);
		cm.setChestItem(loc36, true, ironHelm, 3, ironBoots, 9, splashhe, 15, arrows1, 19, fs, 24);
		
		cm.createChest(loc37);
		cm.clearChest(loc37);
		cm.setChestItem(loc37, true, diamondAxe, 2, tnt1, 7, splashha, 14, gapple2, 21, pork1, 24);
		
		cm.createChest(loc38);
		cm.clearChest(loc38);
		cm.setChestItem(loc38, true, ironChest, 5, ironHelm, 12, splashhe, 19, gapple1, 23, apple1, 25);
		
		cm.createChest(loc39);
		cm.clearChest(loc39);
		cm.setChestItem(loc39, true, diamondSword, 4, diamond1, 11, arrows1, 16, fs, 23);
		
		cm.createChest(loc40);
		cm.clearChest(loc40);
		cm.setChestItem(loc40, true, arrows2, 2, diamond1, 7, splashhe, 13, diamondAxe, 19, bread2, 23);
		
		cm.createChest(loc41);
		cm.clearChest(loc41);
		cm.setChestItem(loc41, true, ironHelm, 5, ironBoots, 13, ironLeg, 17, bow, 22);
		
		cm.createChest(loc42);
		cm.clearChest(loc42);
		cm.setChestItem(loc42, true, diamondAxe, 4, diamond2, 11, splashhe, 16, arrows1, 23);
		
		cm.createChest(loc43);
		cm.clearChest(loc43);
		cm.setChestItem(loc43, true, ironLeg, 4, ironChest, 11, gapple1, 16, bow, 23, pork1, 19);
		
		//Center Island
		cm.createChest(loc44);
		cm.clearChest(loc44);
		cm.setChestItem(loc44, true, diamondHelm, 6, arrows2, 8, enchantedBook3, 12, enderPearl1, 19, fs, 24);
		
		cm.createChest(loc45);
		cm.clearChest(loc45);
		cm.setChestItem(loc45, true, diamondChest, 2, splashst, 4, bottleOEnchanting, 11, deadBush, 18, shield, 23, pork1, 25);
		
		cm.createChest(loc46);
		cm.clearChest(loc46);
		cm.setChestItem(loc46, true, diamondBoots, 4, splashst, 9, arrows1, 13, wolf, 21, bottleOEnchanting, 26, apple2, 16);
		
		cm.createChest(loc47);
		cm.clearChest(loc47);
		cm.setChestItem(loc47, true, diamondLeg, 4, arrows2, 12, enderPearl2, 14, bone2, 16, bow, 22);
		
		cm.createChest(loc48);
		cm.clearChest(loc48);
		cm.setChestItem(loc48, true, diamondHelm, 1, splashfr, 7, bottleOEnchanting, 13, deadBush, 17, shield, 21, pork1, 25);
		
		cm.createChest(loc49);
		cm.setChestItem(loc49, true, diamondChest, 3, splashst, 11, bone2, 13, enchantedBook3, 18, enchantedBook4, 25);
		cm.clearChest(loc49);
		
		cm.createChest(loc50);
		cm.clearChest(loc50);
		cm.setChestItem(loc50, true, diamondLeg, 2, splashsw, 9, bottleOEnchanting, 14, enchantedBook1, 17, wolf, 23, bread2, 25);
		
		cm.createChest(loc51);
		cm.clearChest(loc51);
		cm.setChestItem(loc51, true, diamondBoots, 4, arrows1, 9, enchantedBook3, 15, bone2, 19, bow, 25);
	}
	
	@EventHandler
	public void onIventoryClick(InventoryClickEvent event)
	{
		ItemStack mainlobby = nameItem(new ItemStack(Material.BED), ChatColor.DARK_RED + "" + ChatColor.BOLD + "Main Lobby");
		ItemStack skyWarsLobby = nameItem(new ItemStack(Material.BARRIER), ChatColor.AQUA + "" + ChatColor.BOLD + "Sky Wars Lobby");
		ItemMeta swlMeta = skyWarsLobby.getItemMeta();
		swlMeta.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
		skyWarsLobby.setItemMeta(swlMeta);
		ItemStack skyWarsKits = nameItem(new ItemStack(Material.EYE_OF_ENDER), ChatColor.GOLD + "" + ChatColor.BOLD + "Sky Wars Kits");
		
		if(event.getWhoClicked() instanceof Player)
		{
		Player p = (Player) event.getWhoClicked();
		ItemStack item = event.getCurrentItem();
		World world = Bukkit.getWorld("SkyMine");
		
		if(p.getWorld().equals(world))
		{
			if(p.getGameMode() == GameMode.SURVIVAL && smGVars != 1)
			{
				event.setCancelled(true);
			}
		}
		
		if(item.getItemMeta().getDisplayName().contains("Sky Mine") && p.getLocation().getWorld() != world && smPGVars == 1)
        {
				switch(smPlayerCounter){
				case 0:
					Location loc = new Location(world, 60.5, 144.0, 0.5, 90, 0);
					if(smplayer1 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer1 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer1.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer1);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 1:
					World world1 = Bukkit.getWorld("SkyMine");
					Location loc1 = new Location(world1, 0.5, 144.0, 60.5, -180, 0);
					if(smplayer2 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer2 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer2.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc1);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer2);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 2:
					World world2 = Bukkit.getWorld("SkyMine");
					Location loc2 = new Location(world2, -59.5, 144.0, 0.5, -90, 0);
		            p.teleport(loc2);
		            if(smplayer3 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer3 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer3.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc2);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer3);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 3:
					World world3 = Bukkit.getWorld("SkyMine");
					Location loc3 = new Location(world3, 0.5, 144.0, -59.5, 0, 0);
					if(smplayer4 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer4 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer4.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc3);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer4);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 4:
					World world4 = Bukkit.getWorld("SkyMine");
					Location loc4 = new Location(world4, 51.5, 144.0, -25.5, 90, 0);
					if(smplayer5 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer5 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer5.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc4);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer5);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 5:
					World world5 = Bukkit.getWorld("SkyMine");
					Location loc5 = new Location(world5, 25.5, 144.0, 50.5, -180, 0);
					if(smplayer6 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer6 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer6.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc5);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer6);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 6:
					World world6 = Bukkit.getWorld("SkyMine");
					Location loc6 = new Location(world6, -50.5, 144.0, 26.5, -90, 0);
					if(smplayer7 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer7 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer7.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc6);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer7);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 7:
					World world7 = Bukkit.getWorld("SkyMine");
					Location loc7 = new Location(world7, -25.5, 144.0, -50.5, 0, 0);
					if(smplayer8 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer8 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer8.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc7);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer8);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 8:
					World world8 = Bukkit.getWorld("SkyMine");
					Location loc8 = new Location(world8, 50.5, 144.0, 26.5, 90, 0);
					if(smplayer9 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer9= (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer9.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc8);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer9);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 9:
					World world9 = Bukkit.getWorld("SkyMine");
					Location loc9 = new Location(world9, -26.5, 144.0, 51.5, -180, 0);
					if(smplayer10 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer10 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer10.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc9);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer10);
			            p.setAllowFlight(false);
		            }else{
		            }	
				case 10:
					World world10 = Bukkit.getWorld("SkyMine");
					Location loc10 = new Location(world10, -50.5, 144.0, -25.5, -90, 0);
					if(smplayer11 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer11 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer11.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc10);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer11);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 11:
					World world11 = Bukkit.getWorld("SkyMine");
					Location loc11 = new Location(world11, 26.5, 144.0, -50.5, 0, 0);
					if(smplayer12 == null)
		            {
		            	p.getInventory().clear();
			            ++smPlayerCounter;
			            smplayer12 = (Player) event.getWhoClicked();
			            for(Player pl : Bukkit.getServer().getOnlinePlayers())
						{
			            	p.showPlayer(pl);
			            	pl.showPlayer(p);
							if(pl.getWorld().getName().equals("SkyMine"))
							{
								pl.sendMessage(ChatColor.GREEN + smplayer12.getName() + " has joined the game, "  + ChatColor.GOLD + smPlayerCounter + "/12");
							}
						}
		            	p.teleport(loc11);
		            	p.getInventory().setItem(7, mainlobby);
			            p.getInventory().setItem(8, skyWarsLobby);
			            p.getInventory().setItem(4, skyWarsKits);
			            setupScoreboard(p);
			            p.setHealth(20.0);
			            p.setFoodLevel(20);
			            smPlayers.add(smplayer12);
			            p.setAllowFlight(false);
						break;
		            }else{
		            }
				case 12:
					p.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "This Game Is Full");
					p.closeInventory();
					break;
				}
	        }else if(item.getItemMeta().getDisplayName().contains("African Safari") && p.getLocation().getWorld() == world){
	    		p.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "You are already in this game");
	    	}else if(item.getItemMeta().getDisplayName().contains("African Safari")){
	    		p.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "This game is still in progress");
	    	}
		}
	}
	
	@SuppressWarnings("unused")
	public void SMPreGameTimer()
	{
		World world = Bukkit.getWorld("SkyMine");
		Bukkit.getScheduler().scheduleSyncRepeatingTask(plugin, new Runnable(){
			@Override
			public void run(){
				Bukkit.getWorld("SkyMine").setTime(8000);
				Bukkit.getWorld("SkyMine").setStorm(false);
				Bukkit.getWorld("SkyMine").setAutoSave(false);
				Bukkit.dispatchCommand(Bukkit.getServer().getConsoleSender(), "save-off");
				
				for(Player p : Bukkit.getServer().getOnlinePlayers())
				{
					if(p.getLocation().getWorld().getName().equals("SkyMine"))
					{
						updateScoreboard(p);
					}
				}
				
				if(smPGVars == 1)
				{
					if(smPGTimer == 0 && smPlayerCounter >= 3)
					{
						smPGTimer = 15;
						smPGVars = 2;
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "15 " + ChatColor.GREEN + "Seconds");
							}
						}
					}else if(smPGTimer == 0 && smPlayerCounter <= 2){  
						smPGTimer = 15;
						
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								p.sendMessage(ChatColor.DARK_RED + "Not Enough Players to Start the Game");
							}
						}
					}else if(smPlayerCounter == 12){
			            smPGTimer = 15;
			            smPGVars = 2;
			            for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "15 " + ChatColor.GREEN + "Seconds");
							}
						}
					}else{
						--smPGTimer;
					}
				}
				
				if(smPGVars == 2)
				{
					--smPGTimer;
					for(Player p : Bukkit.getServer().getOnlinePlayers())
					{
						if(p.getWorld().getName().equals("SkyMine"))
						{
							switch(smPGTimer)
							{
							case 10:
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "10 " + ChatColor.GREEN + "Seconds");
								break;
							case 9: 
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "9 " + ChatColor.GREEN + "Seconds");
								break;
							case 8:
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "8 " + ChatColor.GREEN + "Seconds");
								break;
							case 7:
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "7 " + ChatColor.GREEN + "Seconds");
								break;
							case 6:
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "6 " + ChatColor.GREEN + "Seconds");
								break;
							case 5:
								IChatBaseComponent chatTitle = ChatSerializer.a("{\"text\":\"§c§l*5*\"}");
					    		PacketPlayOutTitle title = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle);
					    		
					    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title);
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "5 " + ChatColor.GREEN + "Seconds");
								break;
							case 4:	
								IChatBaseComponent chatTitle1 = ChatSerializer.a("{\"text\":\"§6§l*4*\"}");
					    		PacketPlayOutTitle title1 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle1);
					    		
					    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title1);
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "4 " + ChatColor.GREEN + "Seconds");
								break;
							case 3:
								IChatBaseComponent chatTitle2 = ChatSerializer.a("{\"text\":\"§c§l*3*\"}");
					    		PacketPlayOutTitle title2 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle2);
					    		
					    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title2);
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "3 " + ChatColor.GREEN + "Seconds");
								break;
							case 2:
								IChatBaseComponent chatTitle3 = ChatSerializer.a("{\"text\":\"§6§l*2*\"}");
					    		PacketPlayOutTitle title3 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle3);
					    		
					    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title3);
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "2 " + ChatColor.GREEN + "Seconds");
								break;
							case 1:
								IChatBaseComponent chatTitle4 = ChatSerializer.a("{\"text\":\"§c§l*1*\"}");
					    		PacketPlayOutTitle title4 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle4);
					    		
					    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title4);
								p.sendMessage(ChatColor.GREEN + "Game Starting in " +  ChatColor.GOLD + "1 " + ChatColor.GREEN + "Second");
								break;
							case 0:
								IChatBaseComponent chatTitle5 = ChatSerializer.a("{\"text\":\"§b§l*Sky Wars*\"}");
					    		PacketPlayOutTitle title5 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle5);
					    		IChatBaseComponent chatSubTitle = ChatSerializer.a("{\"text\": \"§6§l*On Crimson Central*\"}");
					    		PacketPlayOutTitle subtitle = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.SUBTITLE, chatSubTitle);
				    		
								((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title5);
								((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(subtitle);
								p.sendMessage(ChatColor.GREEN + "Game has started");
								p.getInventory().clear();
								
								chestRefil();
								cageDelete();
								smPGVars = 0;
								smGVars = 1;
								smGTimer = 600;
								
								if(SkyWarsLobby.warriors.contains(p))
								{
									ItemStack leatherHelm = new ItemStack(Material.LEATHER_HELMET, 1);
									ItemStack leatherChest = new ItemStack(Material.LEATHER_CHESTPLATE, 1);
									ItemStack leatherLeg = new ItemStack(Material.LEATHER_LEGGINGS, 1);
									ItemStack leatherBoots = new ItemStack(Material.LEATHER_BOOTS, 1);
									ItemStack stoneSword = new ItemStack(Material.STONE_SWORD, 1);
									ItemStack wood = new ItemStack(Material.WOOD, 16);

									p.getInventory().setHelmet(leatherHelm);
									p.getInventory().setChestplate(leatherChest);
									p.getInventory().setLeggings(leatherLeg);
									p.getInventory().setBoots(leatherBoots);
									p.getInventory().addItem(stoneSword);
									p.getInventory().addItem(wood);
								}else if(SkyWarsLobby.bowsmen.contains(p)){
									ItemStack bow = new ItemStack(Material.BOW, 1);
									ItemStack arrows = new ItemStack(Material.ARROW, 16);

									p.getInventory().addItem(bow);
									p.getInventory().addItem(arrows);
								}else if(SkyWarsLobby.brewers.contains(p)){
									ItemStack splashhe = new ItemStack(Material.SPLASH_POTION);
									ItemMeta splashhemeta = (PotionMeta) splashhe.getItemMeta();
									((PotionMeta) splashhemeta).setBasePotionData(new PotionData(PotionType.INSTANT_HEAL));
									splashhe.setItemMeta(splashhemeta);
									ItemStack splashha = new ItemStack(Material.SPLASH_POTION);
									ItemMeta splashhameta = (PotionMeta) splashha.getItemMeta();
									((PotionMeta) splashhameta).setBasePotionData(new PotionData(PotionType.INSTANT_DAMAGE));
									splashha.setItemMeta(splashhameta);
									
									p.getInventory().addItem(splashhe);
									p.getInventory().addItem(splashhe);
									p.getInventory().addItem(splashha);
									p.getInventory().addItem(splashha);
								}
							break;
						}
					}
				}
			}
			}
		}, 0, 20);
	}
		
	public void SMGameTimer()
	{
		Bukkit.getScheduler().scheduleSyncRepeatingTask(plugin, new Runnable(){
			@Override
			public void run(){
				if(smGVars == 1)
				{
					--smGTimer;
					for(Player p : Bukkit.getServer().getOnlinePlayers())
					{
						if(p.getWorld().getName().equals("SkyMine"))
						{
							switch(smGTimer)
							{
								case 600:
									updateScoreboard(p);
									break;
								case 520:
									updateScoreboard(p);
									break;
								case 480:
									updateScoreboard(p);
									break;
								case 430:
									p.sendMessage(ChatColor.GREEN + "Chests are refilling in 10 seconds");
									break;
								case 420:
									p.sendMessage(ChatColor.GREEN + "Chests have been refilled");
									chestRefil();
									updateScoreboard(p);
									break;
								case 360:
									updateScoreboard(p);
									break;
								case 300:
									updateScoreboard(p);
									break;
								case 250:
									p.sendMessage(ChatColor.GREEN + "Chests are refilling in 10 seconds");
									break;
								case 240:
									p.sendMessage(ChatColor.GREEN + "Chests have been refilled");
									chestRefil();
									updateScoreboard(p);
									break;
								case 180:
									updateScoreboard(p);
									break;
								case 120:
									updateScoreboard(p);
									break;
								case 60:
									p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "1 " + ChatColor.GREEN + "Minute");
									updateScoreboard(p);
									break;
								case 10:
									p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "10 " + ChatColor.GREEN + "Seconds");
									break;
								case 9:
									p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "9 " + ChatColor.GREEN + "Seconds");
									break;
								case 8:
									p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "8 " + ChatColor.GREEN + "Seconds");
									break;
								case 7:
									p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "7 " + ChatColor.GREEN + "Seconds");
									break;
								case 6:
									p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "6 " + ChatColor.GREEN + "Seconds");
									break;
								case 5:
									IChatBaseComponent chatTitle = ChatSerializer.a("{\"text\":\"§c§l*5*\"}");
						    		PacketPlayOutTitle title = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle);
						    		
						    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title);
									p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "5 " + ChatColor.GREEN + "Seconds");
									break;
								case 4:
									IChatBaseComponent chatTitle1 = ChatSerializer.a("{\"text\":\"§6§l*4*\"}");
						    		PacketPlayOutTitle title1 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle1);
						    		
						    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title1);
						    		p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "4 " + ChatColor.GREEN + "Seconds");	
						    		break;
								case 3:
									IChatBaseComponent chatTitle2 = ChatSerializer.a("{\"text\":\"§c§l*3*\"}");
						    		PacketPlayOutTitle title2 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle2);
						    		
						    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title2);
						    		p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "3 " + ChatColor.GREEN + "Seconds");	
						    		break;
								case 2:
									IChatBaseComponent chatTitle3 = ChatSerializer.a("{\"text\":\"§6§l*2*\"}");
						    		PacketPlayOutTitle title3 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle3);
						    		
						    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title3);
						    		p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "2 " + ChatColor.GREEN + "Seconds");
						    		break;
								case 1:
									IChatBaseComponent chatTitle4 = ChatSerializer.a("{\"text\":\"§c§l*1*\"}");
						    		PacketPlayOutTitle title4 = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle4);
						    		
						    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title4);
						    		p.sendMessage(ChatColor.GREEN + "Game is ending in " +  ChatColor.GOLD + "1 " + ChatColor.GREEN + "Seconds");
						    		break;
								case 0:
						    		IChatBaseComponent Title = ChatSerializer.a("{\"text\": \"§6§l*Tie*\"}");
						    		PacketPlayOutTitle subtitle = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, Title);
					    		
									((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(subtitle);
									p.sendMessage(ChatColor.GREEN + "Game has ended");
									
									smGVars = 2;
									smGFinal = 10;
									break;
							}
						}
					}
				}
			}
		}, 0, 20);
	}
	
	public void SMEndGameTimer()
	{
		Bukkit.getScheduler().scheduleSyncRepeatingTask(plugin, new Runnable(){
			@SuppressWarnings("deprecation")
			@Override
			public void run(){
				if(smGVars == 2)
				{
					--smGFinal;
					if(smGFinal == 0)
					{
						World world = Bukkit.getWorld("SkyWarsLobby");
						
						Location loc = new Location(world, -2561.5, 52, 744.5, -90, 0);
						
						ItemStack skyWarsMapMenu = nameItem(new ItemStack(Material.MAP),
								ChatColor.AQUA + "" + ChatColor.BOLD + "Select Game");
						
						ItemStack gameMenu = nameItem(new ItemStack(Material.COMPASS), ChatColor.DARK_RED + "Game Menu");
						ItemStack cosmetics = nameItem(new ItemStack(Material.CHEST), ChatColor.YELLOW + "Cosmetics");
						ItemStack hidePlayers = nameItem(new ItemStack(351, 1, (short) 10), ChatColor.DARK_GREEN + "Hide Players");
						ItemMeta hidePlayersMeta = hidePlayers.getItemMeta();
						ArrayList<String> hpLore = new ArrayList<String>();
						hpLore.add(ChatColor.YELLOW + "Coming Soon!");
						hidePlayersMeta.setLore(hpLore);
						hidePlayers.setItemMeta(hidePlayersMeta);
						ItemStack serverRadio = nameItem(new ItemStack(Material.NOTE_BLOCK), ChatColor.AQUA + "Server Radio");
						ItemStack lobbySelector = nameItem(new ItemStack(Material.NETHER_STAR), ChatColor.GOLD + "Lobby Selector (Coming Soon)");
						ItemMeta lobbySelectorMeta = lobbySelector.getItemMeta();
						ArrayList<String> lsLore = new ArrayList<String>();
						lsLore.add(ChatColor.YELLOW + "Coming Soon!");
						lobbySelectorMeta.setLore(lsLore);
						lobbySelector.setItemMeta(lobbySelectorMeta);
						
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							String pn = p.getName();
							if(p.getWorld().getName().equals("SkyMine"))
							{
								if(smDeadPlayers.contains(p))
								{
									for(Player pls : Bukkit.getServer().getOnlinePlayers())
									{
										if(pls != p)
										{
											pls.showPlayer(p);
										}
									}
								}
								
								p.teleport(loc);
								
								p.getInventory().clear();
								
								p.getPlayer().getInventory().setItem(0, gameMenu);
								p.getPlayer().getInventory().setItem(1, skyWarsMapMenu);
								ItemStack profile = new ItemStack(Material.SKULL_ITEM, 1, (short) 3);
								SkullMeta skullMeta = (SkullMeta) profile.getItemMeta();
								skullMeta.setOwner(pn);
								skullMeta.setDisplayName(ChatColor.GOLD + "Profile");
								profile.setItemMeta(skullMeta);
								skullMeta.setDisplayName(pn);
								p.getPlayer().getInventory().setItem(7, profile);
								p.getPlayer().getInventory().setItem(3, hidePlayers);
								p.getPlayer().getInventory().setItem(5, serverRadio);
								p.getPlayer().getInventory().setItem(8, lobbySelector);
								p.getPlayer().getInventory().setItem(4, cosmetics);
								
								p.setAllowFlight(false);
								p.setFlying(false);
								
								p.setHealth(20.0);
								p.setFoodLevel(20);
								
								MainLobby.setupScoreboard1(p);
							}
						}
						
						smGVars = 0;
						smPGVars = 1;
						smPGTimer = 15;
						smGTimer = 600;
						smGFinal = 10;
						smPlayerCounter = 0;
						
						smPlayers.clear();
						smDeadPlayers.clear();
						
						rollback("SkyMine");
						cageRedo();
					}
				}
			}
		}, 0, 20);
	}
	
	@EventHandler(priority = EventPriority.HIGHEST)
	public void onBlockBreak(BlockBreakEvent event){
		World reworld = Bukkit.getWorld("SkyMine");
		Player p = event.getPlayer();
		if(p.getLocation().getWorld().equals(reworld) && p.getGameMode() == GameMode.SURVIVAL)
		{
			if(smGVars != 1)
			{
				event.setCancelled(true);
			}
		}
			
	}
	
	@EventHandler(priority = EventPriority.HIGHEST)
	public void onBlockPlace(BlockPlaceEvent event)
	{
		World mainworld = Bukkit.getWorld("SkyMine");
		Player p = event.getPlayer();
		if(p.getLocation().getWorld().equals(mainworld) && p.getGameMode() == GameMode.SURVIVAL)
		{
			if(smGVars != 1)
			{
				event.setCancelled(true);
			}
		}
	}
	
	@EventHandler
	public void quitEvent(PlayerQuitEvent e) {
		Player p = e.getPlayer();
		//World mainworld = Bukkit.getWorld("SkyMine");
		if(SkyMineSkyWars.smPlayers.contains(p))
		{
			--SkyMineSkyWars.smPlayerCounter;
			SkyMineSkyWars.smPlayers.remove(p);
		}
		if(SkyMineSkyWars.smDeadPlayers.contains(p))
		{
			--SkyMineSkyWars.smPlayerCounter;
			SkyMineSkyWars.smDeadPlayers.remove(p);
		}
		if(SkyMineSkyWars.smPlayerCounter < 2)
		{
			if(SkyMineSkyWars.smPlayerCounter < 2)
			{
				if(SkyMineSkyWars.smPGVars == 1){
					SkyMineSkyWars.smPGVars = 1;
					SkyMineSkyWars.smGVars = 0;
					SkyMineSkyWars.smGTimer = 600;
					SkyMineSkyWars.smPGTimer = 15;
					SkyMineSkyWars.smGFinal = 10;
				}else if(SkyMineSkyWars.smPGVars == 2){
					SkyMineSkyWars.smPGVars = 1;
					SkyMineSkyWars.smGVars = 0;
					SkyMineSkyWars.smGTimer = 600;
					SkyMineSkyWars.smPGTimer = 15;
					SkyMineSkyWars.smGFinal = 10;
					for(Player pl : Bukkit.getServer().getOnlinePlayers())
					{
						if(pl.getWorld().getName().equals("SkyMine"))
						{
							pl.sendMessage(ChatColor.RED+ "There are no longer enough players to continue the game. Game restarting.");
						}
					}
				}else{
					SkyMineSkyWars.smPGVars = 0;
					SkyMineSkyWars.smGVars = 2;
					SkyMineSkyWars.smGTimer = 600;
					SkyMineSkyWars.smPGTimer = 15;
					SkyMineSkyWars.smGFinal = 10;
			
					for(Player pl : Bukkit.getServer().getOnlinePlayers())
					{
						if(pl.getWorld().getName().equals("SkyMine"))
						{
							pl.sendMessage(ChatColor.RED+ "There are no longer enough players to continue the game. Game restarting.");
						}
					}
				}
			}
		}
	}
	
	@EventHandler(priority = EventPriority.HIGHEST)
	public void PlayerDamageReceive(EntityDamageByEntityEvent e)
	{	
		World mainworld = Bukkit.getWorld("SkyMine");
		Location reDeathRespawn = new Location(mainworld, -2561.5, 52, 744.5, -90, 0);
		
		if(e.getEntity() instanceof Player)
		{
			Player damaged = (Player) e.getEntity();
			if(e.getDamager() instanceof Player)
			{
				Player damager = (Player) e.getDamager();
				
				if(damaged.getWorld().equals(mainworld))
				{
					if(smDeadPlayers.contains(damager))
					{
						e.setCancelled(true);
					}
					
					if((damaged.getHealth()-e.getDamage()) <= 0)
					{
						e.setCancelled(true);
						
						for (ItemStack itemStack : damaged.getInventory().getContents()) {
							if(itemStack != null)
							{
								damaged.getWorld().dropItemNaturally(damaged.getLocation(), itemStack);
							}
						}
						for (ItemStack itemStack : damaged.getInventory().getArmorContents()) {
							if(itemStack != null)
							{
								damaged.getWorld().dropItemNaturally(damaged.getLocation(), itemStack);
							}
						}
						
						smDeadPlayers.add(damaged);
						damaged.teleport(reDeathRespawn);
						damaged.setHealth(20.0);
						damaged.setFoodLevel(20);
						damaged.setAllowFlight(true);
						damaged.setFlying(true);
						damaged.getInventory().clear();
						
						if(smGVars == 1)
						{
							--smPlayerCounter;
						}
						
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								p.hidePlayer(damaged);
								p.sendMessage(ChatColor.RED + damaged.getName() + ChatColor.GOLD + " has been killed by " + ChatColor.RED + damager.getName());
							}
						}
					}
					
					if(smPlayerCounter == 1 && smGVars == 1)
					{
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								if(smDeadPlayers.contains(p) != true)
								{
									IChatBaseComponent chatTitle = ChatSerializer.a("{\"text\":\"§4§l*Victory*\"}");
						    		PacketPlayOutTitle title = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle);
						    		
						    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title);
						    		
						    		reWinner = p;
						    		p.sendMessage(ChatColor.GREEN + "Game has Ended");
									p.sendMessage(ChatColor.DARK_RED + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
									p.sendMessage(ChatColor.AQUA + "Winner: " + ChatColor.GOLD + reWinner.getName());
									p.sendMessage(ChatColor.AQUA + "Map: " + ChatColor.GOLD + "Sky Mine");
									p.sendMessage(ChatColor.AQUA + "Mode: " + ChatColor.GOLD + "Normal, Solo");
									p.sendMessage(ChatColor.GOLD + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
								}
							}
						}
						
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								if(smDeadPlayers.contains(p))
								{
									p.sendMessage(ChatColor.GREEN + "Game has Ended");
									p.sendMessage(ChatColor.DARK_RED + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
									p.sendMessage(ChatColor.AQUA + "Winner: " + ChatColor.GOLD + reWinner.getName());
									p.sendMessage(ChatColor.AQUA + "Map: " + ChatColor.GOLD + "Sky Mine");
									p.sendMessage(ChatColor.AQUA + "Mode: " + ChatColor.GOLD + "Normal, Solo");
									p.sendMessage(ChatColor.GOLD + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
									p.teleport(reWinner);

									Firework f = (Firework) p.getPlayer().getWorld().spawnEntity(reWinner.getLocation(),
											EntityType.FIREWORK);
									Firework f2 = (Firework) p.getPlayer().getWorld().spawnEntity(reWinner.getLocation(),
											EntityType.FIREWORK);
									Firework f3 = (Firework) p.getPlayer().getWorld().spawnEntity(reWinner.getLocation(),
											EntityType.FIREWORK);

									FireworkMeta fm = f.getFireworkMeta();
									fm.addEffect(FireworkEffect.builder().flicker(true).trail(true).with(FireworkEffect.Type.BALL_LARGE)
											.withColor(Color.RED).withFade(Color.WHITE).build());
									fm.setPower(2);
									f.setFireworkMeta(fm);
									
									FireworkMeta fm2 = f2.getFireworkMeta();
									fm2.addEffect(FireworkEffect.builder().flicker(true).trail(true).with(FireworkEffect.Type.BALL_LARGE)
											.withColor(Color.RED).withFade(Color.WHITE).build());
									fm2.setPower(2);
									f2.setFireworkMeta(fm2);
									
									FireworkMeta fm3 = f3.getFireworkMeta();
									fm3.addEffect(FireworkEffect.builder().flicker(true).trail(true).with(FireworkEffect.Type.BALL_LARGE)
											.withColor(Color.RED).withFade(Color.WHITE).build());
									fm3.setPower(2);
									f3.setFireworkMeta(fm3);
								}
							}
							
							smGVars = 2;
							smGFinal = 10;
						}
					}
				}
			}
		}
	}
	
	@EventHandler(priority = EventPriority.HIGHEST)
	public void pickupItemEvent(PlayerPickupItemEvent e)
	{
		World mainworld = Bukkit.getWorld("SkyMine");
		Player p = e.getPlayer();
		if(smDeadPlayers.contains(e.getPlayer()))
		{
			e.setCancelled(true);
		}
		if(p.getWorld().equals(mainworld) && smGVars != 1)
		{
			e.setCancelled(true);
		}
	}
	
	@EventHandler(priority = EventPriority.HIGHEST)
	public void dropItemEvent(PlayerDropItemEvent e)
	{
		World mainworld = Bukkit.getWorld("SkyMine");
		Player p = e.getPlayer();
		if(smDeadPlayers.contains(e.getPlayer()))
		{
			e.setCancelled(true);
		}
		if(p.getWorld().equals(mainworld) && smGVars != 1)
		{
			e.setCancelled(true);
		}
	}
	
	@EventHandler(priority = EventPriority.HIGHEST)
	public void onPlayerDamage(EntityDamageEvent e)
	{
		World mainworld = Bukkit.getWorld("SkyMine");
		Location reDeathRespawn = new Location(mainworld, 0.5, 138, 0.5);
		
		if(e.getEntity() instanceof Player)
		{
			Player damaged = (Player) e.getEntity();
			
			if(smDeadPlayers.contains(damaged))
			{
				e.setCancelled(true);
			}
			
			if(damaged.getWorld().equals(mainworld))
			{
				if(smGTimer > 595)
				{
					e.setCancelled(true);
				}
				
				if((damaged.getHealth()-e.getDamage()) <= 0)
				{
					e.setCancelled(true);
					
					for (ItemStack itemStack : damaged.getInventory().getContents()) {
						if(itemStack != null)
						{
							damaged.getWorld().dropItemNaturally(damaged.getLocation(), itemStack);
						}
					}
					for (ItemStack itemStack : damaged.getInventory().getArmorContents()) {
						if(itemStack != null)
						{
							damaged.getWorld().dropItemNaturally(damaged.getLocation(), itemStack);
						}
					}
					
					smDeadPlayers.add(damaged);
					damaged.teleport(reDeathRespawn);
					damaged.setHealth(20.0);
					damaged.setFoodLevel(20);
					damaged.setAllowFlight(true);
					damaged.setFlying(true);
					damaged.getInventory().clear();
					
					if(smGVars == 1)
					{
						--smPlayerCounter;
					}
					
					for(Player p : Bukkit.getServer().getOnlinePlayers())
					{
						if(p.getWorld().getName().equals("SkyMine"))
						{
							p.hidePlayer(damaged);
							
							if(e.getCause() == DamageCause.FALL)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " fell from a high place");
							}
							if(e.getCause() == DamageCause.BLOCK_EXPLOSION)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been exploded");
							}
							if(e.getCause() == DamageCause.CONTACT)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been killed");
							}
							if(e.getCause() == DamageCause.DROWNING)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has drowned");
							}
							if(e.getCause() == DamageCause.ENTITY_EXPLOSION)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been exploded");
							}
							if(e.getCause() == DamageCause.FALLING_BLOCK)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been killed");
							}
							if(e.getCause() == DamageCause.FIRE)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has burned to death");
							}
							if(e.getCause() == DamageCause.FIRE_TICK)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has burned to death");
							}
							if(e.getCause() == DamageCause.HOT_FLOOR)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has burned to death");
							}
							if(e.getCause() == DamageCause.LAVA)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has burned to death");
							}
							if(e.getCause() == DamageCause.LIGHTNING)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been killed by lightning");
							}
							if(e.getCause() == DamageCause.MAGIC)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been killed by magic");
							}
							if(e.getCause() == DamageCause.MELTING)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has burned to death");
							}
							if(e.getCause() == DamageCause.POISON)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been killed by poison");
							}
							if(e.getCause() == DamageCause.PROJECTILE)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has been killed by a projectile");
							}
							if(e.getCause() == DamageCause.STARVATION)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has staved to death");
							}
							if(e.getCause() == DamageCause.SUFFOCATION)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has suffocated");
							}
							if(e.getCause() == DamageCause.SUICIDE)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has suidided");
							}
							if(e.getCause() == DamageCause.THORNS)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED +  " has been killed by thorns");
							}
							if(e.getCause() == DamageCause.VOID)
							{
								p.sendMessage(ChatColor.GOLD + damaged.getName() + ChatColor.RED + " has fallen into the void");
							}
						}
					}
					
					if(smPlayerCounter == 1 && smGVars == 1)
					{
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								if(smDeadPlayers.contains(p) != true)
								{
									IChatBaseComponent chatTitle = ChatSerializer.a("{\"text\":\"§4§l*Victory*\"}");
						    		PacketPlayOutTitle title = new PacketPlayOutTitle(PacketPlayOutTitle.EnumTitleAction.TITLE, chatTitle);
						    		
						    		((CraftPlayer) p.getPlayer()).getHandle().playerConnection.sendPacket(title);
						    		
						    		reWinner = p;
						    		p.sendMessage(ChatColor.GREEN + "Game has Ended");
									p.sendMessage(ChatColor.DARK_RED + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
									p.sendMessage(ChatColor.AQUA + "Winner: " + ChatColor.GOLD + reWinner.getName());
									p.sendMessage(ChatColor.AQUA + "Map: " + ChatColor.GOLD + "Sky Mine");
									p.sendMessage(ChatColor.AQUA + "Mode: " + ChatColor.GOLD + "Normal, Solo");
									p.sendMessage(ChatColor.GOLD + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
								}
							}
						}
						
						for(Player p : Bukkit.getServer().getOnlinePlayers())
						{
							if(p.getWorld().getName().equals("SkyMine"))
							{
								if(smDeadPlayers.contains(p))
								{
									p.sendMessage(ChatColor.GREEN + "Game has Ended");
									p.sendMessage(ChatColor.DARK_RED + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
									p.sendMessage(ChatColor.AQUA + "Winner: " + ChatColor.GOLD + reWinner.getName());
									p.sendMessage(ChatColor.AQUA + "Map: " + ChatColor.GOLD + "Sky Mine");
									p.sendMessage(ChatColor.AQUA + "Mode: " + ChatColor.GOLD + "Normal, Solo");
									p.sendMessage(ChatColor.GOLD + "" + ChatColor.STRIKETHROUGH + ">-----------------------------------------<");
									p.teleport(reWinner);

									Firework f = (Firework) p.getPlayer().getWorld().spawnEntity(reWinner.getLocation(),
											EntityType.FIREWORK);
									Firework f2 = (Firework) p.getPlayer().getWorld().spawnEntity(reWinner.getLocation(),
											EntityType.FIREWORK);
									Firework f3 = (Firework) p.getPlayer().getWorld().spawnEntity(reWinner.getLocation(),
											EntityType.FIREWORK);

									FireworkMeta fm = f.getFireworkMeta();
									fm.addEffect(FireworkEffect.builder().flicker(true).trail(true).with(FireworkEffect.Type.BALL_LARGE)
											.withColor(Color.RED).withFade(Color.WHITE).build());
									fm.setPower(2);
									f.setFireworkMeta(fm);
									
									FireworkMeta fm2 = f2.getFireworkMeta();
									fm2.addEffect(FireworkEffect.builder().flicker(true).trail(true).with(FireworkEffect.Type.BALL_LARGE)
											.withColor(Color.RED).withFade(Color.WHITE).build());
									fm2.setPower(2);
									f2.setFireworkMeta(fm2);
									
									FireworkMeta fm3 = f3.getFireworkMeta();
									fm3.addEffect(FireworkEffect.builder().flicker(true).trail(true).with(FireworkEffect.Type.BALL_LARGE)
											.withColor(Color.RED).withFade(Color.WHITE).build());
									fm3.setPower(2);
									f3.setFireworkMeta(fm3);
								}
							}
							
							smGVars = 2;
							smGFinal = 10;
						}
					}
				}
			}
		}
	}
	
	public void setupScoreboard(Player p){		
		ScoreboardWrapper sc_wrapper = new ScoreboardWrapper(p.getUniqueId());
		CrimsonCentralMain.sbs.put(p.getUniqueId(), sc_wrapper);
		
		sc_wrapper.setTitle(0, ChatColor.GOLD + "" + ChatColor.BOLD + "Sky Mine");
		
		sc_wrapper.setLine(0, 11, ChatColor.AQUA + "", "Time Left: ");
		if(smGTimer%60 < 10){
			sc_wrapper.setLine(0, 10, ChatColor.GOLD + "", smGTimer/60 + ":0" + smGTimer%60);
		}else{
			sc_wrapper.setLine(0, 10, ChatColor.GOLD + "", smGTimer/60 + ":" + smGTimer%60);
		}
		sc_wrapper.setLineBlank(0, 9);
		sc_wrapper.setLine(0, 8, ChatColor.AQUA + "", "Players Left:");
		sc_wrapper.setLine(0, 7, ChatColor.GOLD + "", "" + smPlayerCounter);
		sc_wrapper.setLineBlank(0, 6);
		sc_wrapper.setLine(0, 5, ChatColor.AQUA + "", "Gamemode: ");
		sc_wrapper.setLine(0, 4, ChatColor.GOLD + "", "Normal, Solo");
		sc_wrapper.setLineBlank(0, 3);
		sc_wrapper.setLine(0, 2, ChatColor.AQUA + "", "Kills: ");
		sc_wrapper.setLine(0, 1, ChatColor.GOLD + "", "Coming Soon");
		
		sc_wrapper.toggleScoreboard();
		sc_wrapper.changePage(0);
	}
	
	public void updateScoreboard(Player p){		
		ScoreboardWrapper sc_wrapper = CrimsonCentralMain.sbs.get(p.getUniqueId());
		
		sc_wrapper.setTitle(0, ChatColor.GOLD + "" + ChatColor.BOLD + "Sky Mine");
		
		sc_wrapper.setLine(0, 11, ChatColor.AQUA + "", "Time Left: ");
		if(smGTimer%60 < 10){
			sc_wrapper.setLine(0, 10, ChatColor.GOLD + "", smGTimer/60 + ":0" + smGTimer%60);
		}else{
			sc_wrapper.setLine(0, 10, ChatColor.GOLD + "", smGTimer/60 + ":" + smGTimer%60);
		}
		sc_wrapper.setLineBlank(0, 9);
		sc_wrapper.setLine(0, 8, ChatColor.AQUA + "", "Players Left:");
		sc_wrapper.setLine(0, 7, ChatColor.GOLD + "", "" + smPlayerCounter);
		sc_wrapper.setLineBlank(0, 6);
		sc_wrapper.setLine(0, 5, ChatColor.AQUA + "", "Gamemode: ");
		sc_wrapper.setLine(0, 4, ChatColor.GOLD + "", "Normal, Solo");
		sc_wrapper.setLineBlank(0, 3);
		sc_wrapper.setLine(0, 2, ChatColor.AQUA + "", "Kills: ");
		sc_wrapper.setLine(0, 1, ChatColor.GOLD + "", "Coming Soon");
		
		sc_wrapper.setTitle(1, ChatColor.GOLD + "" + ChatColor.BOLD + "Sky Mine");
		
		sc_wrapper.setLine(1, 11, ChatColor.AQUA + "", "Time Left: ");
		if(smGTimer%60 < 10){
			sc_wrapper.setLine(0, 10, ChatColor.GOLD + "", smGTimer/60 + ":0" + smGTimer%60);
		}else{
			sc_wrapper.setLine(0, 10, ChatColor.GOLD + "", smGTimer/60 + ":" + smGTimer%60);
		}
		sc_wrapper.setLineBlank(1, 9);
		sc_wrapper.setLine(1, 8, ChatColor.AQUA + "", "Players Left:");
		sc_wrapper.setLine(1, 7, ChatColor.GOLD + "", "" + smPlayerCounter);
		sc_wrapper.setLineBlank(1, 6);
		sc_wrapper.setLine(1, 5, ChatColor.AQUA + "", "Gamemode: ");
		sc_wrapper.setLine(1, 4, ChatColor.GOLD + "", "Normal, Solo");
		sc_wrapper.setLineBlank(1, 3);
		sc_wrapper.setLine(1, 2, ChatColor.AQUA + "", "Kills: ");
		sc_wrapper.setLine(1, 1, ChatColor.GOLD + "", "Coming Soon");
		
		sc_wrapper.changePage(1);
		sc_wrapper.changePage(0);
	}
	
	private static ItemStack nameItem(ItemStack item, String name)
	{
		ItemMeta meta = item.getItemMeta();
		meta.setDisplayName(name);
		item.setItemMeta(meta);
		return item;
	}
	
	public static ItemStack createItemStack(Material type, int amt, String name, ItemFlag itemFlag1, ItemFlag itemFlag2,
			ItemFlag itemFlag3, Enchantment enc1, int lev1, Enchantment enc2, int lev2, Enchantment enc3, int lev3,
			PotionType potion, DyeColor dy, String... lores) {
		ItemStack stack = new ItemStack(type, amt);
		ItemMeta im = stack.getItemMeta();
		im.setDisplayName(name);
		if (itemFlag1 != null) {
			im.addItemFlags(itemFlag1);
		}
		if (itemFlag2 != null) {
			im.addItemFlags(itemFlag2);
		}
		if (itemFlag3 != null) {
			im.addItemFlags(itemFlag3);
		}
		if (enc1 != null) {
			im.addEnchant(enc1, lev1, true);
		}
		if (enc2 != null) {
			im.addEnchant(enc2, lev2, true);
		}
		if (enc3 != null) {
			im.addEnchant(enc3, lev3, true);
		}
		if (potion != null) {
			((PotionMeta) im).setBasePotionData(new PotionData(potion));
		}
		if (dy != null) {
			((BannerMeta) im).setBaseColor(dy);
		}
		ArrayList<String> lore = new ArrayList<String>();
		for (String str : lores) {
			lore.add(str);
		}
		im.setLore(lore);
		stack.setItemMeta(im);
		return stack;
	}
	
	public static void unloadMap(String SkyMine)
	{
		if(Bukkit.getServer().unloadWorld(Bukkit.getServer().getWorld(SkyMine), false))
		{
			plugin.getLogger().info("Successfully unloaded " + SkyMine);
		}else{
			plugin.getLogger().severe("COULD NOT UNLOAD " + SkyMine);
		}
	}
	
	public static void loadMap(String SkyMine)
	{
		Bukkit.getServer().createWorld(new WorldCreator(SkyMine));
	}
	
	public static void rollback(String SkyMine)
	{
		unloadMap(SkyMine);
		loadMap(SkyMine);
	}
}
